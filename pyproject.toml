[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "demo_patrikspiess"
version = "0.5.2"
description = "Demo project to try the package deployment"
authors = ["Patrik Spiess <patrik.spiess@bluewin.ch>"]
license = "MIT"
readme = "README.md"
repository = "https://github.com/patrikspiess/demo_patrikspiess"
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Education",
    "Intended Audience :: Information Technology",
    "License :: OSI Approved :: MIT License",
    "Natural Language :: English",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Framework :: tox",
    "Framework :: Sphinx",
    "Framework :: Sphinx :: Extension",
    "Framework :: Sphinx :: Theme",
    "Topic :: Education",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Software Development :: Version Control :: Git"
]

[tool.poetry.urls]
"Bug Tracker" = "https://github.com/patrikspiess/demo_patrikspiess/issues"

[tool.poetry.dependencies]
python = ">=3.9.0, <=3.13"
rich = "~13.6.0"
PyYAML = "~6.0.0"

[tool.poetry.group.dev.dependencies]
pylint = "~3.0.0"
mypy = "~1.5"
types-PyYAML = "^6.0.12.2"
black = "~24.03.0"
tox = "^4.11.3"

[tool.poetry.group.docs.dependencies]
urllib3 = ">=2.2.2"
sphinx = "^7.3.7"
sphinx-rtd-theme = "^2.0.0"

[tool.poetry.scripts]
demops = "demo_patrikspiess.main:main"

[tool.pylint]
disable = "import-error"

[tool.mypy]
python_version = "3.12"
ignore_missing_imports = true
strict = true

[tool.black]
line-length = 100

# here we define the tox settings
# we do it inline ecause we don't want to have another tox.ini in the project root
# package management is done as described in option 3 on the following FAQ
#  - https://python-poetry.org/docs/master/faq/
[tool.tox]
legacy_tox_ini = """[tox]

isolated_build = true
envlist = pylint, mypy, black, docs

[testenv:pylint]
description = Code analysis with pylint
skip_install = true
allowlist_externals = poetry, pylint
commands_pre = poetry install
commands = pylint {posargs} demo_patrikspiess

[testenv:mypy]
description = Static type checking with mypy
skip_install = true
allowlist_externals = poetry, mypy
commands_pre = poetry install
commands = mypy {posargs} demo_patrikspiess --junit-xml mypy.xml

[testenv:black]
description = Check formatting with black
skip_install = true
allowlist_externals = poetry, black
commands_pre = poetry install
commands = black --check --diff {posargs} .

[testenv:docs]
description = Create the documentation with sphinx
skip_install = true
allowlist_externals = poetry, sphinx-build
commands_pre = poetry install
commands = sphinx-build -aEW -b html docs/source docs/build

"""
