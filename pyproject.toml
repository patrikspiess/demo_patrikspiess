[build-system]
requires = ["poetry-core>=1.2.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "demo_patrikspiess"
version = "0.2.0"
description = "Demo project to try the package deployment"
authors = ["Patrik Spiess <patrik.spiess@bluewin.ch>"]
license = "MIT"
readme = "README.md"
repository = "https://github.com/patrikspiess/demo_patrikspiess"
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Education",
    "Intended Audience :: Information Technology",
    "License :: OSI Approved :: MIT License",
    "Natural Language :: English",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Topic :: Education",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Software Development :: Version Control :: Git"
]

[tool.poetry.urls]
"Bug Tracker" = "https://github.com/patrikspiess/demo_patrikspiess/issues"

[tool.poetry.dependencies]
python = "^3.10"
rich = "^12.6.0"

[tool.poetry.group.dev.dependencies]
tox = "^3.26.0"
pylint = "^2.15.3"
mypy = "^0.982"
sphinx = "^5.3.0"
sphinx-rtd-theme = "^1.1.1"

[tool.poetry.scripts]
demops = "demo_patrikspiess.main:main"

[tool.pylint]
disable = "import-error"

[tool.mypy]
python_version = "3.10"
ignore_missing_imports = true
strict = true

[tool.tox]
legacy_tox_ini = """[tox]

isolated_build = True
envlist = pylint, mypy, requirements, doc

[testenv:pylint]
description = Code analysis with pylint
skip_install = True
deps = pylint >= 2.15.3
commands = pylint {posargs} demo_patrikspiess

[testenv:mypy]
description = Static type checking with mypy
skip_install = True
deps = mypy >= 0.982
commands = mypy {posargs} demo_patrikspiess --junit-xml mypy.xml

[testenv:requirements]
allowlist_externals = poetry
description = Create a requirements.txt from the Poetry dependencies (used for readthedocs)
skip_install = True
commands = poetry export --without-hashes --format=requirements.txt --output=docs/requirements.txt

[testenv:docs]
allowlist_externals = poetry
description = Create the documentation with sphinx
skip_install = True
commands = poetry run sphinx-build -b html docs/source docs/build

"""
